$(document).ready(function() {

  // ------------------- VARIABLES & CONSTANTS -------------------

  // Ajax variables
  let ajax_url = '../discs.php';
  let ajax_method = 'GET';

  // ***** Variables and constants needed by Handlebars to create Template *****
  // To print music discs on screen
  const source_cards = $("#cards-template").html();
  const template_cards = Handlebars.compile(source_cards);

  /*
  // To print genres in the selection-options
  const source_options = $("#options-template").html();
  const template_options = Handlebars.compile(source_options);
  */


  // ------------------- FUNCTIONS -------------------

  // Error message when AJAX call fails
  function errorMessage() {
    console.log('ERROR. Sorry, something went wrong!');
    alert('ERROR. Sorry, something went wrong!');
  }

  // ------------- PRINTING MUSIC DISCS ON SCREEN USING TEMPLATE --------------

  // This code should be run only for "vers-ajax" (to print on screen the music discs in the "index.html" file)

  /*
  // OPTION 1 - Checking if the tag "cards container" has children tags in its html
  if($('#cards-container').children().length === 0) {
  }
  */

  /*
  // OPTION 2 - Checking if the ID given to the tag "body" only in the vers-ajax exists (if it exists, it has a "length")
  */
  if($('#vers-ajax').length) {
    // AJAX call to get all the discs (no filters)
    $.ajax({
      url: ajax_url,
      method: ajax_method,
      success: function(results) {
        // Creating an empty array for the music genres
        let genres_list = [];
        // Scrolling the array 'results' generated by the Ajax call
        for (let i = 0; i < results.length; i++) {
          // Storing the values to be printed in a variable
          let context_cards = {
            'poster': results[i].poster,
            'title': results[i].title,
            'author': results[i].author,
            'year': results[i].year,
          };
          // Storing the data in a variable and printing them on screen
          let html_cards = template_cards(context_cards);
          $('#cards-container').append(html_cards);
          // Storing the genre of the current disc in a variable
          let current_genre = results[i].genre;
          // Checking that the genre is not already in the genres array
          if(!genres_list.includes(current_genre)) {
            genres_list.push(current_genre);
          }
        } // End of the "for" loop

        // ---------------- Printing genres on screen ----------------

        // Scrolling the array of genres
        for (let i = 0; i < genres_list.length; i++) {

          /*
          // ********** OPTION 1 - Using Handlebars **********
          // Storing the genres to be printed in a variable
          let context_options = {
            'genre': genres_list[i],
          };
          // Storing the data in a variable and printing them on screen
          let html_options = template_options(context_options);
          $('#select-genre').append(html_options);
          */


          // **********  OPTION 2 - Printing using jQuery & Template Literal **********
          $('#select-genre').append(`
            <option value="${genres_list[i]}">${genres_list[i]}</option>
            `);
        }
      },
      error: function() {
        errorMessage();
      }
    });
  }

  // ---------------------------- FILTER BY GENRE ----------------------------

  // Intercepting the user's choice in the select of genres
  $('#select-genre').change(function() {
    // Emptying the music discs cards container
    $('#cards-container').empty();
    // Storing the value of the selected genre in a variable
    let selected_genre = $(this).val();

    // AJAX call to get only the discs with the selected genre (genre filter)
    $.ajax({
      url: ajax_url,
      method: ajax_method,
      data: {
        genre: selected_genre,  // This data is needed to be passed to the PHP
      },
      success: function(results) {
        // Scrolling the array 'results' generated by the Ajax call
        for (let i = 0; i < results.length; i++) {
          // Storing the values to be printed in a variable
          let context_cards = {
            'poster': results[i].poster,
            'title': results[i].title,
            'author': results[i].author,
            'year': results[i].year,
          };
          // Storing the data in a variable and printing them on screen
          let html_cards = template_cards(context_cards);
          $('#cards-container').append(html_cards);
        }
      },
      error: function() {
        errorMessage();
      }
    }); // End of AJAX call
  });


  // ---------------------------- SORT PER YEAR ----------------------------

  // Intercepting the user's choice in the select of sorting playlist by year
  $('#sort-year').change(function() {
    // Storing the value of the selected sorting order in a variable
    let selected_order = $(this).val();
    console.log(selected_order);
    alert('You have selected: ' + selected_order);

    /*
    // If "ascending" is selected, it is sort by ascending order
    if (selected_order === 'ascending') {
      ARRAY_OF_DISCS????????.sort((disc1, disc2) => {
        return parseInt(disc1.year) - parseInt(disc2.year);
      });
    // If "descending" is selected, it is sort by descending order
    } else if (selected_order === 'descending') {
      ARRAY_OF_DISCS?????.sort((disc1, disc2) => {
        return parseInt(disc2.year) - parseInt(disc1.year);
      });
    }
    */

  });
});
